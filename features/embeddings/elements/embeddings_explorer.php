<?php

if (!defined('ABSPATH')) {
    exit;
}

require_once plugin_dir_path(__FILE__) . '../../../vendor/autoload.php';
require_once plugin_dir_path(__FILE__) . '../VectorTable.php';
require_once plugin_dir_path(__FILE__) . '../chunk_getters.php';

use \NlpTools\Tokenizers\WhitespaceAndPunctuationTokenizer;
//access to vector table
$VT = new ContentOracle_VectorTable($this->get_prefix());
//$vector = [-0.023895263671875,-0.01117706298828125,0.044158935546875,0.01514434814453125,0.0213623046875,0.005512237548828125,0.049713134765625,0.01434326171875,-0.020904541015625,-0.00765228271484375,-0.040985107421875,0.0831298828125,0.0011157989501953125,0.0159759521484375,-0.09063720703125,0.033111572265625,0.016143798828125,0.0130157470703125,0.038421630859375,0.0273590087890625,-0.02362060546875,-0.004848480224609375,-0.051055908203125,0.011444091796875,-0.01505279541015625,-0.02947998046875,-0.015594482421875,-0.06378173828125,-0.0215911865234375,0.0194854736328125,0.0206756591796875,-0.0706787109375,0.0187530517578125,0.014251708984375,0.045074462890625,-0.011077880859375,0.003475189208984375,-0.032318115234375,-0.007045745849609375,0.0404052734375,-0.01160430908203125,-0.005138397216796875,-0.0053863525390625,0.006389617919921875,-0.053375244140625,-0.0162506103515625,0.00978851318359375,0.0072784423828125,0.01506805419921875,-0.048858642578125,0.006206512451171875,0.024688720703125,0.032470703125,0.004802703857421875,0.003326416015625,0.01580810546875,0.00836181640625,-0.041473388671875,-0.005268096923828125,0.0120849609375,-0.0265350341796875,-0.023895263671875,-0.0179595947265625,-0.0098876953125,-0.00762176513671875,0.028564453125,0.042266845703125,-0.0311279296875,0.0082550048828125,0.031341552734375,0.01374053955078125,0.031829833984375,0.00315093994140625,-0.0037899017333984375,-0.046905517578125,-0.042449951171875,0.002658843994140625,0.03790283203125,0.01373291015625,0.0195159912109375,-0.034423828125,-0.0155792236328125,0.046600341796875,-0.0202484130859375,-0.035247802734375,0.0189666748046875,0.042388916015625,0.00878143310546875,-0.013275146484375,0.0302581787109375,0.031494140625,-0.01169586181640625,0.01959228515625,-0.008056640625,0.06805419921875,0.03759765625,-0.027008056640625,0.0140533447265625,0.01483917236328125,0.0290985107421875,0.002796173095703125,-0.004940032958984375,0.052703857421875,0.005733489990234375,0.0064239501953125,-0.00905609130859375,-0.002307891845703125,0.0005998611450195312,-0.01421356201171875,0.0013246536254882812,-0.06494140625,-0.005046844482421875,-0.00878143310546875,-0.056427001953125,-0.01387786865234375,0.007160186767578125,-0.032470703125,0.06103515625,-0.018951416015625,-0.03057861328125,0.064697265625,0.02880859375,-0.01776123046875,0.045318603515625,-0.0220794677734375,-0.031341552734375,0.0311279296875,0.038238525390625,-0.04901123046875,-0.0149383544921875,-0.034149169921875,-0.033782958984375,-0.031768798828125,-0.0233306884765625,0.0066375732421875,-0.04034423828125,0.0271759033203125,-0.0153350830078125,-0.015350341796875,0.00612640380859375,0.0230255126953125,-0.043731689453125,-0.051971435546875,0.0103912353515625,-0.022674560546875,0.004238128662109375,-0.0165252685546875,0.055511474609375,-0.01153564453125,0.027069091796875,-0.038848876953125,0.037109375,0.06640625,0.005397796630859375,-0.01456451416015625,-0.037628173828125,-0.01511383056640625,-0.016326904296875,0.0212249755859375,-0.00669097900390625,-0.00232696533203125,0.031982421875,-0.0141754150390625,0.050689697265625,-0.0318603515625,-0.05084228515625,-0.046051025390625,0.020263671875,-0.046356201171875,0.0134124755859375,0.03802490234375,-0.03973388671875,0.0626220703125,0.06793212890625,-0.0026397705078125,0.06732177734375,0.0159759521484375,-0.0022068023681640625,0.047149658203125,0.051483154296875,0.00934600830078125,0.00868988037109375,0.044586181640625,-0.004253387451171875,-0.0052947998046875,-0.0390625,-0.0357666015625,-0.0005674362182617188,-0.0015716552734375,0.040191650390625,-0.047943115234375,-0.043853759765625,-0.0241241455078125,0.03497314453125,0.0037479400634765625,0.03179931640625,0.022430419921875,-0.02081298828125,0.03778076171875,-0.00107574462890625,0.006763458251953125,0.04425048828125,0.0074615478515625,0.0533447265625,0.042327880859375,-0.0197601318359375,0.0211944580078125,0.0174407958984375,0.024139404296875,-0.0308990478515625,0.00839996337890625,-0.0017728805541992188,-0.01099395751953125,-0.02545166015625,-0.0455322265625,-0.0006303787231445312,-0.01068878173828125,0.003040313720703125,0.0221405029296875,-0.0164642333984375,0.0141448974609375,-0.045440673828125,0.00661468505859375,0.043121337890625,-0.00998687744140625,0.04119873046875,-0.0059661865234375,0.00927734375,0.0164947509765625,0.01395416259765625,0.00687408447265625,-0.002391815185546875,0.016204833984375,0.034271240234375,0.00647735595703125,-0.00897216796875,0.05694580078125,0.006374359130859375,0.036376953125,-0.01009368896484375,-0.02593994140625,0.00872802734375,0.001140594482421875,0.0428466796875,0.004970550537109375,-0.003360748291015625,-0.00963592529296875,-0.0300140380859375,0.0235595703125,0.0765380859375,-0.07037353515625,0.0140838623046875,-0.078369140625,0.004116058349609375,-0.032623291015625,-0.01444244384765625,-0.032318115234375,-0.0406494140625,0.04583740234375,-0.034149169921875,0.0026111602783203125,-0.003559112548828125,0.015899658203125,-0.01068115234375,0.042877197265625,0.0416259765625,-0.05389404296875,-0.0021076202392578125,0.07916259765625,-0.00476837158203125,0.005870819091796875,-0.046905517578125,0.041259765625,-0.03253173828125,0.03594970703125,-0.01212310791015625,-0.002590179443359375,0.0243072509765625,0.0213470458984375,0.03302001953125,-0.003482818603515625,0.00344085693359375,-0.018157958984375,0.0550537109375,-0.044677734375,-0.02044677734375,0.027099609375,-0.0013513565063476562,-0.0084991455078125,-0.049560546875,0.0262298583984375,0.017364501953125,-0.01537322998046875,-0.012451171875,-0.01105499267578125,-0.0101470947265625,0.01459503173828125,0.00795745849609375,-0.01190948486328125,0.06640625,0.018585205078125,-0.061553955078125,-0.005176544189453125,-0.01354217529296875,0.0139617919921875,-0.07403564453125,-0.035980224609375,-0.056640625,-0.0181732177734375,-0.0765380859375,-0.021148681640625,-0.0187530517578125,-0.007183074951171875,0.0228424072265625,0.01543426513671875,0.004901885986328125,-0.0323486328125,-0.0271148681640625,0.040069580078125,-0.0166778564453125,-0.035064697265625,-0.01407623291015625,0.0257110595703125,-0.0250091552734375,-0.004974365234375,0.0215911865234375,-0.00820159912109375,-0.01116943359375,0.0102386474609375,-0.01238250732421875,0.0031452178955078125,-0.0300445556640625,0.0474853515625,0.024566650390625,0.0178680419921875,0.0207672119140625,0.05108642578125,0.027679443359375,-0.054595947265625,0.009033203125,-0.02435302734375,-0.003314971923828125,0.042816162109375,0.0045013427734375,-0.034759521484375,-0.0155792236328125,-0.0307159423828125,0.004314422607421875,0.032684326171875,0.0210113525390625,0.0297088623046875,-0.00673675537109375,0.016357421875,0.0662841796875,0.0078125,0.07196044921875,-0.052398681640625,-0.0245819091796875,-0.00441741943359375,0.0318603515625,-0.0034427642822265625,-0.0160980224609375,0.005069732666015625,0.0242156982421875,0.013427734375,0.0199432373046875,-0.01047515869140625,0.030517578125,-0.00909423828125,-0.034027099609375,0.001873016357421875,-0.0263519287109375,0.0024738311767578125,0.0487060546875,0.0240631103515625,0.0065460205078125,-0.005176544189453125,-0.0426025390625,0.0202484130859375,-0.008636474609375,-0.058380126953125,0.0216064453125,0.041595458984375,0.01546478271484375,0.012725830078125,-0.023712158203125,-0.07415771484375,0.035308837890625,-0.01248931884765625,0.0634765625,0.05804443359375,0.00916290283203125,0.01078033447265625,0.0032806396484375,-0.0017223358154296875,0.0238037109375,0.005046844482421875,0.0135040283203125,0.070556640625,0.043975830078125,0.00917816162109375,-0.0360107421875,0.0133514404296875,0.0025653839111328125,0.0271148681640625,0.00335693359375,0.04541015625,0.0267791748046875,-0.0005536079406738281,-0.035980224609375,0.034027099609375,0.003467559814453125,0.003047943115234375,0.0235443115234375,-0.012542724609375,0.01125335693359375,-0.04071044921875,-0.00899505615234375,-0.0202484130859375,-0.00804901123046875,0.03863525390625,0.0202484130859375,-0.060516357421875,-0.0088958740234375,0.07183837890625,-0.057037353515625,-0.01018524169921875,0.036712646484375,-0.0026721954345703125,0.038604736328125,-0.0254669189453125,-0.053253173828125,0.037200927734375,-0.029296875,-0.06219482421875,0.0200653076171875,-0.0072021484375,-0.02410888671875,-0.03472900390625,-0.0264739990234375,0.01264190673828125,-0.00518798828125,-0.005496978759765625,0.01000213623046875,-0.02972412109375,0.0294342041015625,0.041534423828125,0.02960205078125,0.023895263671875,-0.020904541015625,0.02984619140625,-0.03448486328125,-0.03741455078125,-0.012420654296875,0.01433563232421875,-0.0127716064453125,-0.033203125,-0.04193115234375,0.01141357421875,0.0163726806640625,-0.005374908447265625,0.03131103515625,-0.0211334228515625,-0.052459716796875,-0.042266845703125,0.0222320556640625,0.0222015380859375,0.04534912109375,0.0037899017333984375,-0.044403076171875,0.0005865097045898438,-0.032196044921875,0.0016126632690429688,0.017181396484375,0.0070953369140625,-0.01100921630859375,0.03851318359375,0.0185699462890625,-0.0200042724609375,-0.014068603515625,0.056182861328125,-0.034210205078125,0.0085906982421875,-0.03997802734375,0.019622802734375,0.0296173095703125,-0.093994140625,-0.032623291015625,-0.001495361328125,0.006427764892578125,0.020538330078125,-0.03497314453125,0.00400543212890625,0.0247039794921875,-0.03729248046875,-0.0491943359375,-0.0212860107421875,-0.024261474609375,-0.04107666015625,0.00128173828125,-0.0031185150146484375,0.0017118453979492188,0.0024433135986328125,-0.0064239501953125,0.0089111328125,0.031463623046875,-0.040618896484375,-0.0277099609375,0.0244598388671875,-0.049652099609375,-0.022735595703125,-0.03131103515625,0.01055908203125,-0.0210418701171875,0.0186309814453125,-0.0145416259765625,-0.0511474609375,0.004390716552734375,-0.024658203125,0.005084991455078125,0.023773193359375,-0.0244293212890625,-0.024749755859375,-0.0156402587890625,0.03790283203125,-0.014923095703125,-0.002216339111328125,-0.01187896728515625,0.0200042724609375,-0.05126953125,0.0088043212890625,0.007293701171875,0.004245758056640625,0.00823974609375,0.0034465789794921875,0.0067596435546875,0.015655517578125,0.0022735595703125,-0.0196380615234375,-0.0110931396484375,-0.04913330078125,0.00910186767578125,-0.0012826919555664062,-0.0221099853515625,-0.01503753662109375,0.005596160888671875,-0.079345703125,-0.01043701171875,0.06243896484375,0.003387451171875,-0.0309295654296875,-0.00650787353515625,-0.00821685791015625,0.01947021484375,-0.0230712890625,0.0187530517578125,-0.01444244384765625,-0.021697998046875,0.00177001953125,-0.0244598388671875,0.0166473388671875,-0.0194549560546875,0.0511474609375,0.0499267578125,0.022186279296875,-0.038604736328125,-0.001735687255859375,0.0038738250732421875,-0.031219482421875,-0.0015125274658203125,-0.004405975341796875,0.03662109375,-0.031768798828125,-0.03533935546875,0.050811767578125,0.0256195068359375,0.01165008544921875,0.0183563232421875,0.047027587890625,0.025146484375,0.00872802734375,0.053436279296875,-0.0212249755859375,-0.06134033203125,-0.00428009033203125,0.005031585693359375,0.0477294921875,0.02801513671875,0.029571533203125,-0.0203094482421875,0.01123046875,0.048736572265625,0.0110626220703125,-0.036651611328125,-0.0307464599609375,0.05487060546875,-0.00449371337890625,0.0222015380859375,0.0333251953125,0.05255126953125,0.01396942138671875,-0.01556396484375,0.04302978515625,0.0802001953125,0.03692626953125,-0.0113525390625,-0.0261993408203125,-0.0263214111328125,0.024261474609375,-0.051483154296875,-0.0282745361328125,0.03607177734375,0.0240936279296875,-0.033233642578125,-0.04327392578125,0.0088958740234375,-0.0024967193603515625,0.0258636474609375,0.021209716796875,-0.01396942138671875,0.08099365234375,0.007175445556640625,-0.036102294921875,0.01165771484375,-0.005519866943359375,0.016632080078125,0.0213623046875,0.02886962890625,-0.029632568359375,0.01375579833984375,-0.00019419193267822266,0.03802490234375,-0.01502227783203125,0.0285797119140625,0.0053558349609375,0.0280303955078125,0.0321044921875,0.0256195068359375,-0.01727294921875,-0.00885009765625,-0.0038776397705078125,0.06658935546875,-0.00551605224609375,0.035675048828125,-0.0041351318359375,-0.0181427001953125,0.00528717041015625,-0.01678466796875,-0.0139312744140625,-0.0133514404296875,0.0036716461181640625,-0.01175689697265625,-0.037689208984375,0.00695037841796875,-0.02587890625,0.00881195068359375,0.005523681640625,-0.00994873046875,-0.01519775390625,0.0307769775390625,-0.02288818359375,-0.061737060546875,0.020782470703125,-0.04058837890625,-0.05377197265625,-0.03564453125,-0.0101776123046875,0.0299224853515625,-0.045379638671875,-0.067626953125,0.005092620849609375,0.05279541015625,0.014862060546875,-0.0157928466796875,-0.034698486328125,-0.01123046875,-0.007549285888671875,-0.0121612548828125,-0.04791259765625,-0.007122039794921875,0.033782958984375,-0.0570068359375,-0.00421905517578125,0.0038814544677734375,-0.0004699230194091797,-0.016387939453125,0.01313018798828125,-0.056243896484375,0.0216827392578125,-0.035247802734375,0.0092620849609375,-0.024688720703125,-0.016265869140625,0.046142578125,0.07098388671875,-0.011474609375,0.000492095947265625,-0.0103912353515625,-0.0614013671875,-0.0094146728515625,0.0006136894226074219,-0.000217437744140625,-0.056182861328125,-0.00911712646484375,0.05023193359375,-0.0443115234375,0.00787353515625,-0.0089569091796875,-0.0029430389404296875,-0.006557464599609375,0.004894256591796875,0.0013036727905273438,0.01702880859375,0.0653076171875,0.01348876953125,-0.05718994140625,0.00876617431640625,-0.03125,0.031890869140625,0.031524658203125,-0.01033782958984375,-0.054595947265625,0.0142974853515625,0.007007598876953125,-0.035858154296875,-0.02392578125,-0.093505859375,-0.0145721435546875,0.036346435546875,0.01134490966796875,0.00736236572265625,-0.0142822265625,-0.0243682861328125,-0.0157928466796875,-0.03204345703125,-0.025299072265625,0.01434326171875,0.0298614501953125,-0.0758056640625,-0.01134490966796875,-0.03375244140625,-0.049591064453125,-0.01403045654296875,-0.00826263427734375,0.03948974609375,-0.01654052734375,-0.048858642578125,0.01541900634765625,0.0191802978515625,0.03643798828125,0.0011138916015625,0.034912109375,-0.05645751953125,0.0250244140625,0.0016012191772460938,0.0099029541015625,0.0091400146484375,0.027801513671875,-0.01025390625,0.01395416259765625,0.0140380859375,-0.0040740966796875,0.042327880859375,0.0297393798828125,-0.037567138671875,-0.050506591796875,-0.005878448486328125,-0.02978515625,-0.0001418590545654297,-0.0171051025390625,0.0280914306640625,0.0015735626220703125,-0.0013179779052734375,-0.08917236328125,0.044830322265625,0.01268768310546875,0.0169525146484375,-0.0005102157592773438,-0.038909912109375,-0.0830078125,-0.0631103515625,-0.040679931640625,0.008941650390625,-0.02484130859375,-0.004993438720703125,0.00672149658203125,-0.00567626953125,0.007404327392578125,-0.031585693359375,0.04815673828125,0.005664825439453125,-0.021820068359375,-0.042724609375,0.050689697265625,-0.006221771240234375,-0.01178741455078125,-0.00336456298828125,-0.00569915771484375,0.00789642333984375,-0.01153564453125,-0.0205230712890625,-0.0101470947265625,0.04620361328125,0.02203369140625,-0.01479339599609375,0.0101776123046875,0.0015010833740234375,0.025146484375,-0.00844573974609375,-0.00946044921875,0.020782470703125,-0.004924774169921875,0.003978729248046875,-0.0287933349609375,-0.046905517578125,-0.1016845703125,-0.01153564453125,-0.052734375,-0.01702880859375,0.001323699951171875,-0.004459381103515625,0.01471710205078125,0.01355743408203125,0.018463134765625,-0.007564544677734375,-0.0220794677734375,-0.03424072265625,0.0091552734375,0.0238800048828125,0.0275421142578125,0.016632080078125,-0.0247802734375,0.0309295654296875,-0.0200347900390625,-0.00429534912109375,-0.0172882080078125,0.0369873046875,-0.039886474609375,0.01114654541015625,-0.031494140625,-0.01702880859375,0.022003173828125,0.023101806640625,0.0151824951171875,0.0013837814331054688,0.04986572265625,-0.01580810546875,-0.04083251953125,0.0082855224609375,-0.0011835098266601562,-0.060455322265625,0.00968170166015625,-0.00406646728515625,0.022216796875,0.0377197265625,0.0242919921875,0.0258941650390625,0.043853759765625,0.0174102783203125,-0.002567291259765625,0.017822265625,-0.01947021484375,0.0167083740234375,0.0108489990234375,0.04791259765625,-0.007598876953125,-0.0181884765625,-0.0108642578125,-0.07379150390625,0.04443359375,-0.0159454345703125,-0.0787353515625,-0.0201873779296875,0.0491943359375,0.032440185546875,0.01099395751953125,0.0753173828125,0.036773681640625,0.0216217041015625,0.004276275634765625,-0.0035266876220703125,-0.04583740234375,-0.0012750625610351562,0.03717041015625,0.0238037109375,-0.05078125,0.036468505859375,0.061920166015625,-0.0263671875,-0.01444244384765625,0.0301361083984375,-0.0117340087890625,0.0237579345703125,0.0421142578125,-0.00847625732421875,-0.06524658203125,-0.000957489013671875,0.0435791015625,-0.00495147705078125,-0.003448486328125,-0.01467132568359375,0.0023040771484375,0.057647705078125,-0.0187530517578125,-0.0009279251098632812,0.01284027099609375,0.0701904296875,0.01026153564453125,-0.041656494140625,-0.0198974609375,0.02362060546875,0.0295562744140625,-0.0227508544921875,0.0218963623046875,-0.0008211135864257812,-0.004734039306640625,0.033599853515625,0.056396484375,-0.01323699951171875,0.07342529296875,-0.0307159423828125,-0.045257568359375,0.015594482421875,0.005344390869140625,0.0268707275390625,-0.0178680419921875,-0.034149169921875,-0.00293731689453125,-0.049285888671875,0.042388916015625,0.0166778564453125,0.0289154052734375,0.0214080810546875,-0.048675537109375,-0.018951416015625,0.031524658203125,0.0526123046875,0.043243408203125,0.01453399658203125,0.0159912109375,-0.043243408203125,0.043731689453125,0.03289794921875,-0.038543701171875,0.042510986328125,-0.05316162109375,0.0003917217254638672,-0.0648193359375,-0.00907135009765625,0.042999267578125,-0.0032863616943359375,0.001453399658203125,-0.0303955078125,0.00719451904296875,0.00681304931640625,-0.0152435302734375,-0.011993408203125,0.00433349609375,-0.056243896484375,0.01499176025390625,-0.0032482147216796875,0.0093841552734375,0.0175018310546875,-0.074951171875,0.048675537109375,-0.00665283203125,0.006778717041015625,0.011444091796875,0.01119232177734375,0.05511474609375,-0.005828857421875,0.00844573974609375,0.038299560546875,0.00917816162109375,0.032958984375,0.05316162109375,0.005474090576171875,-0.0283203125,-0.0156097412109375,-0.0195159912109375,-0.07080078125,0.0177001953125,0.00559234619140625,0.038360595703125,0.0205230712890625,-0.0004057884216308594,-0.0291290283203125,-0.049285888671875,0.0509033203125,0.00507354736328125,-0.035247802734375,0.032073974609375,-0.03961181640625,0.059234619140625,0.01062774658203125,0.051605224609375,-0.0352783203125,0.023345947265625,0.0018930435180664062,-0.0029010772705078125,0.0006728172302246094,-0.0218658447265625,0.016571044921875,0.03887939453125,0.00345611572265625,0.02337646484375,-0.00980377197265625,0.002765655517578125,-0.08758544921875,-0.0276947021484375,0.0035953521728515625,0.01543426513671875,0.036590576171875,-0.0626220703125,-0.0140533447265625,0.035980224609375,0.056488037109375,0.0606689453125,-0.0009984970092773438,0.03802490234375,-0.03619384765625,-0.01995849609375,0.01277923583984375,-0.01540374755859375];
//$result = $VT->search(json_encode( $vector ));
//this file shows an input, and uses it to display the raw embeddings values for a given post

//set default values
$post_id = null;
$embeddings = [];

//get the selected post, if one is selected
//get the post id of the selected post
if (isset($_REQUEST['post_id'])) {
    $post_id = $_REQUEST['post_id'];
    $selected_post = get_post($post_id);

    //get the embeddings of the post
    $embedding_ids = get_post_meta($post_id, $this->get_prefix() . 'embeddings', true) ?? [];
    if (!is_array($embedding_ids)) {    //ensure the embeddings are an array
        $embedding_ids = [];
    }
    $embeddings = $VT->ids($embedding_ids);
}

//handle an embedding generation request
//handle the action from the admin page
if (isset($_REQUEST['action'])) {

    switch ($_REQUEST['action']){
        case 'generate_embeddings':
            //get the post id of the selected post
            if (isset($_REQUEST['post_id'])) {
                //un comment to allow manual embedding editing
                // //get the embeddings from the request
                // $embeddings = $_REQUEST['embeddings'];

                // //update the embeddings for the post
                // update_post_meta($post_id, $this->get_prefix() . 'embeddings', $embeddings);

                //ensure the post is of a type that the ai indexes
                $post_types = get_option('contentoracle_post_types');
                if (!isset($selected_post) || !in_array($selected_post->post_type, $post_types)) {
                    return;
                }

                //trigger new embeddings generation, by loading the post, and saving it with a flag
                update_post_meta($post_id, $this->get_prefix() . 'should_generate_embeddings', true);
                
                //this triggers the save_post hook, which will generate the embeddings
                wp_update_post(array(
                    'ID' => $post_id,
                    'post_content' => $selected_post->post_content . $this->get_update_tag()
                ));

                //get the updated embeddings of the post
                $embedding_ids = get_post_meta($post_id, $this->get_prefix() . 'embeddings', true) ?? [];
                if (!is_array($embedding_ids)) {    //ensure the embeddings are an array
                    $embedding_ids = [];
                }
                $embeddings = $VT->ids($embedding_ids);
            }
            break;
        case 'bulk_generate_embeddings':

            //ensure embeddings are enabled
            $chunking_method = get_option($this->get_prefix() . 'chunking_method');
            if ($chunking_method == 'none' || $chunking_method == '') {
                echo 'Chunking method must be set to generate embeddings.';
                break;
            }

            //get the option from the bulk selector
            if (!isset($_REQUEST['bulk_generate_embeddings_option']) || $_REQUEST['bulk_generate_embeddings_option'] == '') {
                break;
            }
            $bulk_option = $_REQUEST['bulk_generate_embeddings_option'];

            //get all the posts, based on the selected bulk option and post types to index
            $post_types = get_option('contentoracle_post_types') ?? [];
            $posts = [];
            switch ($bulk_option) {
                case 'unembedded':
                    $posts = get_posts(array(
                        'post_type' => $post_types,
                        'numberposts' => -1,
                        'orderby' => 'post_type',
                        'order' => 'ASC',
                        'meta_query' => array(
                            'relation' => 'OR',
                            array(
                                'key' => $this->get_prefix() . 'embeddings',
                                'compare' => 'NOT EXISTS'
                            ),
                            array(
                                'key' => $this->get_prefix() . 'embeddings',
                                'value' => 'a:0:{}',
                                'compare' => '='   //empty
                            ),

                        )
                    ));
                    break;
                case 'all':
                    $posts = get_posts(array(
                        'post_type' => $post_types,
                        'numberposts' => -1,
                        'orderby' => 'post_type',
                        'order' => 'ASC'
                    ));
                    break;
                default:
                    return;
            }
            
            //call $this->generate_embeddings for each post
            $this->generate_embeddings($posts);
    }
    //end switch action
}

//ensure the embeddings are an array
if (!is_array($embeddings)) {
    $embeddings = [];
}

//get the types of posts that are indexed by the AI
$post_types = get_option('contentoracle_post_types');

//get all posts of the indexed types
$posts = get_posts(array(
    'post_type' => $post_types,
    'numberposts' => -1,
    'orderby' => 'post_type',
    'order' => 'ASC'
));
?>
<strong>Note: Embeddings will only be generated for posts of the types set in the "Prompt" settings.  They will also only be generated if a chunking method is set.</strong>
<br>
<br>
<details>
    <summary>Tips</summary>
    <ul>
        <li>
            Select a post from the dropdown to view its embeddings.
        </li>
        <li>
            Click "Generate Embeddings" to generate embeddings for the selected post.
        </li>
        <li>
            Click "Re-Generate Embeddings" to re-generate embeddings for the selected post.
        </li>
        <li>
            Click "Bulk Generate Embeddings" to generate embeddings for many posts at once.
        </li>
        <li>
            Note that embeddings will only be generated and shown for posts of the types selected in the prompt settings.
        </li>
    </ul>
</details>
<div id="<?php echo esc_attr( $this->get_prefix() ) ?>embeddings_explorer" style="display: flex;">
    <div>
        <h3>Embeddings Explorer</h3>
        <p>Use the form below to explore the embeddings for a given post.</p>

        <label for="<?php echo esc_attr($this->get_prefix()) ?>post_embedding_selector">Post</label>
        <select 
            name="post_id" 
            required 
            id="<?php echo esc_attr($this->get_prefix()) ?>post_embedding_selector"
            title="The embeddings shown in the table below are for the selected post.  Embeddings will be generated for this post if the button is pressed."
        >
            <option value="" selected>Select a post...</option>
            <?php foreach ($posts as $post) { ?>
                <option value="<?php echo esc_attr( $post->ID ); ?>" <?php selected( $post_id, $post->ID ); ?>><?php echo esc_html( $post->post_title ); ?> (<?php echo esc_attr( $post->post_type ) ?>)</option>
            <?php } ?>
        </select>

        <script>
            document.addEventListener('DOMContentLoaded', function(){
                let selector = document.getElementById('<?php echo esc_attr($this->get_prefix()) ?>post_embedding_selector');
                console.log(selector, "selector");
                selector.addEventListener('change', function(){
                    window.location.href = '<?php echo esc_url($_SERVER['PHP_SELF']); ?>?page=contentoracle-embeddings&post_id=' + selector.value;
                });
            });
        </script>

        <br>
        <br>

            <?php
                if ($post_id && intval($post_id) > 0) {
                    //get the last time the embeddings were generated
                    $most_recent_embedding = $VT->get_latest_updated($post_id);
        
                    if (isset($most_recent_embedding->updated_at)) {
                        ?>
                            Embeddings last generated at: <?php echo esc_html($most_recent_embedding->updated_at); ?>
                        <?php
                    }
                }
            ?>

        <div
        >
            <form 
                method="POST" 
                action="<?php echo esc_url($_SERVER['PHP_SELF']); ?>?page=contentoracle-embeddings&post_id=<?php echo esc_url($post_id) ?>"
            >
                <div
                    style="max-width: 48rem; overflow-x: auto;"
                >
                    <table>
                        <thead>
                            <tr>
                                <th>Content</th>
                                <th>Value</th>
                            </tr>
                        </thead>
                        <tbody>
                            
                            <?php if (isset($embeddings) && count($embeddings) > 0) { ?>
                                <?php foreach ($embeddings as $i => $embedding) { ?>
                                    <tr>
    
                                        <?php 
                                            $section = token256_get_chunk($selected_post->post_content, $i);
                                        ?>
    
                                        <td title="<?php echo esc_attr($section); ?>">
                                            <?php 
                                                $tokens = explode(' ', $section);
                                                $display_section = implode(' ', array_slice($tokens, 0, 3)) . ' ... ' . implode(' ', array_slice($tokens, -3));
                                                echo esc_html($display_section);
                                            ?>
                                        </td>
                                        <td contenteditableinput name="embeddings[]"><?php echo esc_html($embedding->vector); ?></td>
                                    </tr>
                                <?php } ?>
                            <?php } else { ?>
                                <tr>
                                    <td colspan="2">No embeddings found.</td>
                                </tr>
                            <?php } ?>
                        </tbody>
                    </table>
                </div>
                <input type="hidden" name="post_id" value="<?php echo esc_attr( $post_id ) ?>">
                <input type="hidden" name="action" value="generate_embeddings">
                <input type="submit" value="<?php echo count($embeddings) > 0 ? "Re-Generate Embeddings" : "Generate Embeddings"  ?>" class="button-primary">
            </form>
        </div>

        <script>
            class ContentEditableInput{
                //this class binds the innertext of a contenteditable element to the value of an input
                constructor(el){
                    this.init(el);
                }

                //initialize the class, creating the hidden input and binding the events
                init(el){
                    //link this instance to the element
                    this.el = el;
                    this.el.setAttribute('contenteditable', 'true');

                    //create the hidden input
                    this.input = document.createElement('input');
                    this.input.type = 'hidden';
                    this.input.name = this.el.getAttribute('name');
                    this.el.appendChild(this.input);

                    //add event listener to this.el to update the input
                    this.el.addEventListener('input', ()=>{this.bind(this)});   //pass in the context, due to event listener
                    this.bind();
                }

                //update the input value based on the element's innerText
                bind(context){
                    //bind the input to the element
                    if (!context) context = this;
                    this.input.value = context.el.innerText;
                }
            }

            //attach a form element to elements with the contenteditableinput attribute
            document.addEventListener('DOMContentLoaded', function(){
                let elements = document.querySelectorAll('[contenteditableinput]');
                elements.forEach(el => {
                    let cei = new ContentEditableInput(el);
                });
            });
        </script>
    </div>
    <div style="width: 2rem;"></div>
    <div>
        <h3>Bulk Generate Embeddings</h3>
        <p>Generate embeddings for many posts at once! <small>Note that this could take a while!</small></p>

        <form 
            method="POST" 
            action="<?php echo esc_url($_SERVER['PHP_SELF']); ?>?page=contentoracle-embeddings" 
        >
        <label for="bulk_generate_embeddings_select">Bulk Options</label>
            <div style="display: flex;">
                <select 
                    name="bulk_generate_embeddings_option" 
                    id="bulk_generate_embeddings_select" 
                    required
                    title="Select an option to generate embeddings for many posts at once.  This will only generate embeddings for posts of the types selected in the prompt settings, and only if a chunking method is set."    
                >
                    <option value="" selected>Select an option...</option>
                    <option value="unembedded">All Posts Without Embeddings</option>
                    <option value="all">All Posts</option>
                </select>
                <input type="submit" value="Generate Embeddings" class="button-primary">
            </div>
            <input type="hidden" name="action" value="bulk_generate_embeddings">
        </form>
    </div>
</div>
<br>
<br>
<small>Note: Generating embeddings may result in charges to your account.</small>